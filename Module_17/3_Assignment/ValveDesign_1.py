import numpy as np
import matplotlib.pyplot as plt

## Lift functions for two different valve trim types
def f_lin(x):
    return x             # linear valve trim
def f_ep(x):
    R = 20
    return R**(x-1)      # equal percentage valve trim (R = 20-50)

lift = np.linspace(0,1)  # equally spaced points between 0 and 1

plt.figure(1)            # create new figure
plt.title('Valve Performance - Not Installed')
plt.subplot(2,1,1)                # 2,1 subplot with 1st window
plt.plot(lift,f_lin(lift),'b-')   # linear valve
plt.plot(lift,f_ep(lift),'r--')   # equal percentage
plt.ylabel('f(l)')
plt.legend(['Linear Valve Trim','Equal Percentage Valve Trim'])

g_s = 1.1                # specific gravity of fluid
def q(x,f,Cv,DPv):
    return Cv * f(x) * np.sqrt(DPv/g_s)   # flow through a valve

## Intrinsic valve performance
# no process equipment - all pressure drop is across valve
DPt = 100 # Total pressure generated by pump (constant)
Cv = 2    # Valve Cv
flow_lin = q(lift,f_lin,Cv,DPt)  # flow with linear valve
flow_ep  = q(lift,f_ep,Cv,DPt)   # flow with equal percentage

plt.subplot(2,1,2)               # 2,1 subplot with 2nd window
plt.plot(lift,flow_lin,'b-')     # plot linear valve response
plt.plot(lift,flow_ep,'r--')     # plot equal percentage valve
plt.ylabel('Flow')
plt.legend(['Linear Valve Trim','Equal Percentage Valve Trim'])
plt.xlabel('Fractional Valve Lift')
plt.show()